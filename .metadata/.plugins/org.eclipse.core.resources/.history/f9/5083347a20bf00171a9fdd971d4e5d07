package sudokuSolver;
public class Solver {
	private int [][]board;
	private int size;
	Solver(int [][]board,int size){
		this.size=size;
		this.board=board;
	}
	private boolean colSafe(int y,int num){
		return true;
	}
	private boolean canPlace(int x,int y,int num){
		if(! colSafe(int y,int num))
			return false;
		return true;
	}
	
	public boolean solve(){
		int x=-1,y=-1;
		boolean isEmpty=false;
		for(int i=0;i<this.size;i++){
			for(int j=0;j<this.size;j++){
				if(this.board[i][j]==0){
					isEmpty=true;
					x=i;y=j;
				}
				if(isEmpty)
					break;
			}
		}
		if(!isEmpty)
			return true;
		for(int i=1;i<this.size+1;i++){
			if(canPlace(x,y,i))
				board[x][y]=i;
			if(solve())
				return true;
			this.board[x][y]=0;
		}
		return false;
	}
}
